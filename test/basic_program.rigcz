
func main {
	var vec = Vector2(2.f, 3.f).plus(1.f);

	print("vec = ({:.2f}, {:.2f}), length = {:.3f}\n", vec.x, vec.y, vec.length());
}

class Vector2
{
	x: Float32;
	y: Float32;

	construct {
		x = 0.f;
		y = 0.f;
	}

	construct(x: Float32, y: Float32) {
		self.x = x;
		self.y = y;
	}

	length {
		ret sqrt(x*x + y*y);
	}

	normalized {
		var copy = self;
		var len = copy.length();
		copy.x /= len;
		copy.y /= len;
		ret copy;
	}

	plus(x: Float32, y: Float32) {
		ret Vector2(self.x + x, self.y + y);
	}
	plus(scalar: Float32) {
		ret self.plus(scalar, scalar);
	}
}

func sqrt(n: Float32)
{
	var x = n;
	var y = 1.f;
	var e = 0.001f;
	while (x - y > e) {
		x = (x + y) / 2.f;
		y = n / x;
	}
	// print("sqrt({}) = {}\n", n, x);
	ret x;
}
